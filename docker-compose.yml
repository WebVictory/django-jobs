version: '3.7'

services:
  build:
    context: .
    dockerfile: Dockerfile
    image: aggregator
    hostname: web
    command: bash -c "python manage.py collectstatic --noinput && python manage.py migrate --noinput && gunicorn jobs.wsgi:application --workers 1 --bind unix:/app/jobs.sock"
    volumes:
      - ./src:/app
    env_file:
      - config/.envfile
    links:
      - db
    depends_on:
      - db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"

  db:
    image: postgres:12-alpine
    env_file:
      - config/.envfile
    volumes:
      - db-data:/var/lib/postgresql/data
    container_name: db
    ports:
      - '5432:5432'
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

  celery:
    image: aggregator
    working_dir: /app
    command: bash -c "python -m nltk.downloader punkt && python -m nltk.downloader stopwords && celery -A jc.celery worker -l info"
    volumes:
      - ./src:/app
    env_file:
      - config/.envfile
    links:
      - db
      - redis
    depends_on:
      - redis
      - web
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: '10m'
        max-file: '1'

    celery_beat:
      image: aggregator
      working_dir: /app
      command: bash -c "python -m nltk.downloader punkt && python -m nltk.downloader stopwords && celery -A jc.celery beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
      volumes:
        - ./src:/app
      env_file:
        - config/.envfile
      links:
        - db
        - redis
      depends_on:
        - redis
        - web
      restart: always
      logging:
        driver: "json-file"
        options:
          max-size: '10m'
          max-file: '1'

  redis:
    image: redis:alpine
    working_dir: /data
    ports:
      - '6379:6379'
    volumes:
      - /data:/data
    container_name: redis
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '1'

  nginx-certbot:
    restart: unless-stopped
    image: jonasal/nginx-certbot:latest
    container_name: ncert_j
    ports:
      - 80:80
      - 443:443
    env_file:
      - config/.envfile
    volumes:
      - ./config/nginx:/etc/nginx/user.conf.d:ro
      - letsencrypt_j:/etc/letsencrypt
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"

volumes:
  db-data:
  redis: